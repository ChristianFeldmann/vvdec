name: CI build

on:
  push:
  release:
    types:
      - created

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-16.04
            CMAKE_ADD: -DBUILD_SHARED_LIBS=0
          - os: ubuntu-18.04
            CMAKE_ADD: -DBUILD_SHARED_LIBS=0
          - os: ubuntu-20.04
            CMAKE_ADD: -DBUILD_SHARED_LIBS=1
            OUTPUT_LIB: libvvdec.so
            OUTPUT_LIB_PAHT: lib/release-shared
          - os: ubuntu-20.04
            CMAKE_ADD: -DBUILD_SHARED_LIBS=0
          - os: macos-10.15
            CMAKE_ADD: -DBUILD_SHARED_LIBS=1
            OUTPUT_LIB: libvvdec.dylib
            OUTPUT_LIB_PAHT: lib/release-shared
          - os: macos-10.15
            CMAKE_ADD: -DBUILD_SHARED_LIBS=0
          - os: windows-2019
            CMAKE_ADD: -DBUILD_SHARED_LIBS=1
            OUTPUT_LIB: vvdec.dll
            OUTPUT_LIB_PAHT: bin/release-shared
          - os: windows-2019
            CMAKE_ADD: -DBUILD_SHARED_LIBS=0
    steps:
    - uses: actions/checkout@v2
    - run: git fetch --prune --unshallow
    - name: Build Linux / mac
      run: |
        mkdir build
        cd build
        cmake ${{matrix.CMAKE_ADD}} -DCMAKE_BUILD_TYPE=Release ..
        make -j$(nproc)
      if: matrix.os != 'windows-2019'
    - name: Build Windows
      run: |
        mkdir build
        cd build
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        cmake ${{matrix.CMAKE_ADD}} ..
        msbuild /property:Configuration=Release vvdec.sln
      shell: cmd
      if: matrix.os == 'windows-2019'
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{matrix.OUTPUT_LIB}}
        path: ${{matrix.OUTPUT_LIB_PAHT}}/${{matrix.OUTPUT_LIB}}
      if: matrix.OUTPUT_LIB != ''
    - name: Upload Release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: lib/release-shared/${{matrix.OUTPUT_LIB}}
        asset_name: ${{matrix.OUTPUT_LIB}}
        asset_content_type: application/library
      if: github.event_name == 'release'
